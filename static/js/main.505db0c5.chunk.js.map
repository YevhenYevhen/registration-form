{"version":3,"sources":["Form.jsx","App.js","reportWebVitals.js","index.js"],"names":["schema","yup","shape","firstName","required","lastName","email","age","positive","integer","max","password","min","confirmPassword","oneOf","Form","useState","submitted","setSubmitted","data","setData","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","console","log","className","onClick","window","location","reload","onSubmit","userData","type","name","placeholder","message","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.505db0c5.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport * as yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport './App.css'\n\nconst schema = yup.object().shape({\n    firstName: yup.string().required('Please, enter your first name'),\n    lastName: yup.string().required('Please, enter your last name'),\n    email: yup.string().email().required(),\n    age: yup.number().positive().integer().max(200).required(),\n    password: yup.string().min(4).max(12).required('Please, enter your password'),\n    confirmPassword: yup.string().oneOf([yup.ref('password'), null])\n})\n\nexport const Form = () => {\n    const [submitted, setSubmitted] = useState(false)\n    const [data, setData] = useState({})\n\n    const { register, handleSubmit, formState: { errors } } = useForm({\n        resolver: yupResolver(schema)\n    })\n\n    const submitForm = (userData) => {\n        setData(userData)\n        setSubmitted(true)\n    }\n\n    console.log(data);\n\n    return (\n        <div className='container'>\n            {submitted\n                ? <div className='form'>\n                    <div className='title'>Your data has been submitted!</div>\n                    <button className='button' onClick={() => window.location.reload()}>Ok</button>\n                </div>\n                : <div className=\"form\">\n                    <div className=\"title\">Sign up</div>\n                    <form onSubmit={handleSubmit(submitForm)}>\n                        <div className=\"inputs\">\n                            <div>\n                                <input type=\"text\" name='firstName' placeholder='First name...' {...register('firstName')} />\n                                <div className='errors' >{errors.firstName?.message}</div>\n                            </div>\n                            <div>\n                                <input type=\"text\" name='lastName' placeholder='Last name...' {...register('lastName')} />\n                                <div className='errors' >{errors.lastName?.message}</div>\n                            </div>\n                            <div>\n                                <input type=\"text\" name='email' placeholder='Email...' {...register('email')} />\n                                <div className='errors' >\n                                    {errors.email?.type === 'required' && 'Please, enter your email'}\n                                    {errors.email?.type === 'email' && 'Email is invalid'}\n                                </div>\n                            </div>\n                            <div>\n                                <input type=\"number\" name='age' placeholder='Age...' {...register('age')} />\n                                <div className='errors' >\n                                    {errors.age?.type === 'typeError' && 'Please, enter your age'}\n                                    {errors.age?.type === 'min' && 'Age must be a positive number'}\n                                    {errors.age?.type === 'max' && 'Age is invalid'}\n                                    {errors.age?.type === 'integer' && 'Age must be an integer'}\n                                </div>\n                            </div>\n                            <div>\n                                <input type=\"password\" name='password' placeholder='Password...' {...register('password')} />\n                                <div className='errors' >\n                                    {errors.password?.type === 'required' && 'Please, enter your password'}\n                                    {errors.password?.type === 'min' && 'Password must be 4-12 characters long'}\n                                    {errors.password?.type === 'max' && 'Password must be 4-12 characters long'}\n                                </div>\n                            </div>\n                            <div>\n                                <input type=\"password\"\n                                    name='confirmPassword'\n                                    placeholder='Confirm password...'\n                                    {...register('confirmPassword')} />\n                                <div className='errors' >{errors.confirmPassword && 'Passwords do not match'}</div>\n                            </div>\n                            <div>\n                                <button className='button' type=\"submit\">Submit</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            }\n        </div>\n    )\n}\n","import './App.css';\nimport { Form } from './Form';\n\nexport const App = () => {\n  return (\n    <div>\n      <Form />\n    </div>\n  )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}